// Copyright (c) .NET Foundation. All rights reserved.
// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using NuGet.Common;
using NuGet.Protocol;
using NuGet.Protocol.Core.Types;

namespace NuGet.Commands
{
    internal class VulnerabilityInformationProvider
    {
        private readonly SourceRepository _sourceRepository;
        private AsyncLazy<VulnerabilityInfoResource> _vulnerabilityInfoResource;
        private AsyncLazy<Dictionary<string, List<VulnerabilityInfoResource.PackageMetadata>>> _ensurePackageVulnerabilitiesInfoAsyncTask;
        private readonly object _lock = new();

        public VulnerabilityInformationProvider(SourceRepository sourceRepository)
        {
            _sourceRepository = sourceRepository;
        }

        /// <summary>
        /// Returns null if it's not supported.
        /// </summary>
        /// <param name="log"></param>
        /// <param name="token"></param>
        /// <returns></returns>
        public async Task<Dictionary<string, List<VulnerabilityInfoResource.PackageMetadata>>> GetVulnerabilitiesAsync(
            ILogger log,
            CancellationToken token)
        {
            lock (_lock)
            {
                _vulnerabilityInfoResource = new(() => _sourceRepository.GetResourceAsync<VulnerabilityInfoResource>());
            }

            VulnerabilityInfoResource vulnerabilityInfoResource = await _vulnerabilityInfoResource;

            if (vulnerabilityInfoResource == null)
            {
                return null;
            }
            lock (_lock)
            {
                if (vulnerabilityInfoResource != null && _ensurePackageVulnerabilitiesInfoAsyncTask == null)
                {
                    _ensurePackageVulnerabilitiesInfoAsyncTask = new(() => vulnerabilityInfoResource.GetAllPackageVulnerabilityInformationAsync(log, token));
                }
            }

            return await _ensurePackageVulnerabilitiesInfoAsyncTask;
        }
    }
}
